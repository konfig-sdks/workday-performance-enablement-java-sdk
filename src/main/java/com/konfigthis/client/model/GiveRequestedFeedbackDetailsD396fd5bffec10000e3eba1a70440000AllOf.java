/*
 * performanceEnablement
 * The Performance Management service enables applications to access and create feedback about workers in the system.
 *
 * The version of the OpenAPI document: v5
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AboutWorkerD396fd5bffec1000100f44a5808f0005;
import com.konfigthis.client.model.BusinessProcessParametersD396fd5bffec1000100f440bde4c0001;
import com.konfigthis.client.model.RequestedByD396fd5bffec1000100f44a5808f0006;
import com.konfigthis.client.model.RequestedFeedbackCommentsD396fd5bffec10001393477e77870000;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf {
  public static final String SERIALIZED_NAME_DUE_DATE = "dueDate";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private LocalDate dueDate;

  public static final String SERIALIZED_NAME_FEEDBACK_GIVEN_DATE = "feedbackGivenDate";
  @SerializedName(SERIALIZED_NAME_FEEDBACK_GIVEN_DATE)
  private LocalDate feedbackGivenDate;

  public static final String SERIALIZED_NAME_FEEDBACK_CREATION_DATE = "feedbackCreationDate";
  @SerializedName(SERIALIZED_NAME_FEEDBACK_CREATION_DATE)
  private LocalDate feedbackCreationDate;

  public static final String SERIALIZED_NAME_REQUESTED_BY = "requestedBy";
  @SerializedName(SERIALIZED_NAME_REQUESTED_BY)
  private RequestedByD396fd5bffec1000100f44a5808f0006 requestedBy;

  public static final String SERIALIZED_NAME_ABOUT_WORKER = "aboutWorker";
  @SerializedName(SERIALIZED_NAME_ABOUT_WORKER)
  private AboutWorkerD396fd5bffec1000100f44a5808f0005 aboutWorker;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expirationDate";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private LocalDate expirationDate;

  public static final String SERIALIZED_NAME_DISPLAY_NAMEOF_RESPONDER = "displayNameofResponder";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAMEOF_RESPONDER)
  private Boolean displayNameofResponder;

  public static final String SERIALIZED_NAME_FEEDBACK_COMMENTS = "feedbackComments";
  @SerializedName(SERIALIZED_NAME_FEEDBACK_COMMENTS)
  private List<RequestedFeedbackCommentsD396fd5bffec10001393477e77870000> feedbackComments = null;

  public static final String SERIALIZED_NAME_BUSINESS_PROCESS_PARAMETERS = "businessProcessParameters";
  @SerializedName(SERIALIZED_NAME_BUSINESS_PROCESS_PARAMETERS)
  private BusinessProcessParametersD396fd5bffec1000100f440bde4c0001 businessProcessParameters;

  public static final String SERIALIZED_NAME_FEEDBACK_PRIVATE = "feedbackPrivate";
  @SerializedName(SERIALIZED_NAME_FEEDBACK_PRIVATE)
  private Boolean feedbackPrivate;

  public static final String SERIALIZED_NAME_FEEDBACK_CONFIDENTIAL = "feedbackConfidential";
  @SerializedName(SERIALIZED_NAME_FEEDBACK_CONFIDENTIAL)
  private Boolean feedbackConfidential;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DESCRIPTOR = "descriptor";
  @SerializedName(SERIALIZED_NAME_DESCRIPTOR)
  private String descriptor;

  public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf() {
  }

  
  public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf(
     LocalDate dueDate, 
     LocalDate feedbackGivenDate, 
     LocalDate feedbackCreationDate, 
     LocalDate expirationDate, 
     Boolean displayNameofResponder
  ) {
    this();
    this.dueDate = dueDate;
    this.feedbackGivenDate = feedbackGivenDate;
    this.feedbackCreationDate = feedbackCreationDate;
    this.expirationDate = expirationDate;
    this.displayNameofResponder = displayNameofResponder;
  }

   /**
   * The date the business process needs to be completed.
   * @return dueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the business process needs to be completed.")

  public LocalDate getDueDate() {
    return dueDate;
  }




   /**
   * The date the feedback was provided.
   * @return feedbackGivenDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the feedback was provided.")

  public LocalDate getFeedbackGivenDate() {
    return feedbackGivenDate;
  }




   /**
   * The date the feedback event was created.
   * @return feedbackCreationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the feedback event was created.")

  public LocalDate getFeedbackCreationDate() {
    return feedbackCreationDate;
  }




  public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf requestedBy(RequestedByD396fd5bffec1000100f44a5808f0006 requestedBy) {
    
    
    
    
    this.requestedBy = requestedBy;
    return this;
  }

   /**
   * Get requestedBy
   * @return requestedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RequestedByD396fd5bffec1000100f44a5808f0006 getRequestedBy() {
    return requestedBy;
  }


  public void setRequestedBy(RequestedByD396fd5bffec1000100f44a5808f0006 requestedBy) {
    
    
    
    this.requestedBy = requestedBy;
  }


  public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf aboutWorker(AboutWorkerD396fd5bffec1000100f44a5808f0005 aboutWorker) {
    
    
    
    
    this.aboutWorker = aboutWorker;
    return this;
  }

   /**
   * Get aboutWorker
   * @return aboutWorker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AboutWorkerD396fd5bffec1000100f44a5808f0005 getAboutWorker() {
    return aboutWorker;
  }


  public void setAboutWorker(AboutWorkerD396fd5bffec1000100f44a5808f0005 aboutWorker) {
    
    
    
    this.aboutWorker = aboutWorker;
  }


   /**
   * The date the feedback request expires.
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the feedback request expires.")

  public LocalDate getExpirationDate() {
    return expirationDate;
  }




   /**
   * True if the feedback provider&#39;s name is not displayed.
   * @return displayNameofResponder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "True if the feedback provider's name is not displayed.")

  public Boolean getDisplayNameofResponder() {
    return displayNameofResponder;
  }




  public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf feedbackComments(List<RequestedFeedbackCommentsD396fd5bffec10001393477e77870000> feedbackComments) {
    
    
    
    
    this.feedbackComments = feedbackComments;
    return this;
  }

  public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf addFeedbackCommentsItem(RequestedFeedbackCommentsD396fd5bffec10001393477e77870000 feedbackCommentsItem) {
    if (this.feedbackComments == null) {
      this.feedbackComments = new ArrayList<>();
    }
    this.feedbackComments.add(feedbackCommentsItem);
    return this;
  }

   /**
   * The feedback comments for this feedback event. To include feedback comments in reports or notifications intended for Employees, use Feedback Comments for Self-Service Reporting instead.
   * @return feedbackComments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The feedback comments for this feedback event. To include feedback comments in reports or notifications intended for Employees, use Feedback Comments for Self-Service Reporting instead.")

  public List<RequestedFeedbackCommentsD396fd5bffec10001393477e77870000> getFeedbackComments() {
    return feedbackComments;
  }


  public void setFeedbackComments(List<RequestedFeedbackCommentsD396fd5bffec10001393477e77870000> feedbackComments) {
    
    
    
    this.feedbackComments = feedbackComments;
  }


  public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf businessProcessParameters(BusinessProcessParametersD396fd5bffec1000100f440bde4c0001 businessProcessParameters) {
    
    
    
    
    this.businessProcessParameters = businessProcessParameters;
    return this;
  }

   /**
   * Get businessProcessParameters
   * @return businessProcessParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BusinessProcessParametersD396fd5bffec1000100f440bde4c0001 getBusinessProcessParameters() {
    return businessProcessParameters;
  }


  public void setBusinessProcessParameters(BusinessProcessParametersD396fd5bffec1000100f440bde4c0001 businessProcessParameters) {
    
    
    
    this.businessProcessParameters = businessProcessParameters;
  }


  public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf feedbackPrivate(Boolean feedbackPrivate) {
    
    
    
    
    this.feedbackPrivate = feedbackPrivate;
    return this;
  }

   /**
   * Yes if the feedback is private between the feedback provider and the worker.
   * @return feedbackPrivate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Yes if the feedback is private between the feedback provider and the worker.")

  public Boolean getFeedbackPrivate() {
    return feedbackPrivate;
  }


  public void setFeedbackPrivate(Boolean feedbackPrivate) {
    
    
    
    this.feedbackPrivate = feedbackPrivate;
  }


  public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf feedbackConfidential(Boolean feedbackConfidential) {
    
    
    
    
    this.feedbackConfidential = feedbackConfidential;
    return this;
  }

   /**
   * Yes if the feedback is confidential between the feedback provider and the manager. Employees, or who the feedback is about, don&#39;t see confidential feedback.
   * @return feedbackConfidential
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Yes if the feedback is confidential between the feedback provider and the manager. Employees, or who the feedback is about, don't see confidential feedback.")

  public Boolean getFeedbackConfidential() {
    return feedbackConfidential;
  }


  public void setFeedbackConfidential(Boolean feedbackConfidential) {
    
    
    
    this.feedbackConfidential = feedbackConfidential;
  }


  public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Id of the instance
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Id of the instance")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf descriptor(String descriptor) {
    
    
    
    
    this.descriptor = descriptor;
    return this;
  }

   /**
   * A preview of the instance
   * @return descriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit ame", value = "A preview of the instance")

  public String getDescriptor() {
    return descriptor;
  }


  public void setDescriptor(String descriptor) {
    
    
    
    this.descriptor = descriptor;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf instance itself
   */
  public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf = (GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf) o;
    return Objects.equals(this.dueDate, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.dueDate) &&
        Objects.equals(this.feedbackGivenDate, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.feedbackGivenDate) &&
        Objects.equals(this.feedbackCreationDate, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.feedbackCreationDate) &&
        Objects.equals(this.requestedBy, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.requestedBy) &&
        Objects.equals(this.aboutWorker, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.aboutWorker) &&
        Objects.equals(this.expirationDate, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.expirationDate) &&
        Objects.equals(this.displayNameofResponder, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.displayNameofResponder) &&
        Objects.equals(this.feedbackComments, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.feedbackComments) &&
        Objects.equals(this.businessProcessParameters, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.businessProcessParameters) &&
        Objects.equals(this.feedbackPrivate, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.feedbackPrivate) &&
        Objects.equals(this.feedbackConfidential, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.feedbackConfidential) &&
        Objects.equals(this.id, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.id) &&
        Objects.equals(this.descriptor, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.descriptor)&&
        Objects.equals(this.additionalProperties, giveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dueDate, feedbackGivenDate, feedbackCreationDate, requestedBy, aboutWorker, expirationDate, displayNameofResponder, feedbackComments, businessProcessParameters, feedbackPrivate, feedbackConfidential, id, descriptor, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf {\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    feedbackGivenDate: ").append(toIndentedString(feedbackGivenDate)).append("\n");
    sb.append("    feedbackCreationDate: ").append(toIndentedString(feedbackCreationDate)).append("\n");
    sb.append("    requestedBy: ").append(toIndentedString(requestedBy)).append("\n");
    sb.append("    aboutWorker: ").append(toIndentedString(aboutWorker)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    displayNameofResponder: ").append(toIndentedString(displayNameofResponder)).append("\n");
    sb.append("    feedbackComments: ").append(toIndentedString(feedbackComments)).append("\n");
    sb.append("    businessProcessParameters: ").append(toIndentedString(businessProcessParameters)).append("\n");
    sb.append("    feedbackPrivate: ").append(toIndentedString(feedbackPrivate)).append("\n");
    sb.append("    feedbackConfidential: ").append(toIndentedString(feedbackConfidential)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    descriptor: ").append(toIndentedString(descriptor)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dueDate");
    openapiFields.add("feedbackGivenDate");
    openapiFields.add("feedbackCreationDate");
    openapiFields.add("requestedBy");
    openapiFields.add("aboutWorker");
    openapiFields.add("expirationDate");
    openapiFields.add("displayNameofResponder");
    openapiFields.add("feedbackComments");
    openapiFields.add("businessProcessParameters");
    openapiFields.add("feedbackPrivate");
    openapiFields.add("feedbackConfidential");
    openapiFields.add("id");
    openapiFields.add("descriptor");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf is not found in the empty JSON string", GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `requestedBy`
      if (jsonObj.get("requestedBy") != null && !jsonObj.get("requestedBy").isJsonNull()) {
        RequestedByD396fd5bffec1000100f44a5808f0006.validateJsonObject(jsonObj.getAsJsonObject("requestedBy"));
      }
      // validate the optional field `aboutWorker`
      if (jsonObj.get("aboutWorker") != null && !jsonObj.get("aboutWorker").isJsonNull()) {
        AboutWorkerD396fd5bffec1000100f44a5808f0005.validateJsonObject(jsonObj.getAsJsonObject("aboutWorker"));
      }
      if (jsonObj.get("feedbackComments") != null && !jsonObj.get("feedbackComments").isJsonNull()) {
        JsonArray jsonArrayfeedbackComments = jsonObj.getAsJsonArray("feedbackComments");
        if (jsonArrayfeedbackComments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("feedbackComments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `feedbackComments` to be an array in the JSON string but got `%s`", jsonObj.get("feedbackComments").toString()));
          }

          // validate the optional field `feedbackComments` (array)
          for (int i = 0; i < jsonArrayfeedbackComments.size(); i++) {
            RequestedFeedbackCommentsD396fd5bffec10001393477e77870000.validateJsonObject(jsonArrayfeedbackComments.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `businessProcessParameters`
      if (jsonObj.get("businessProcessParameters") != null && !jsonObj.get("businessProcessParameters").isJsonNull()) {
        BusinessProcessParametersD396fd5bffec1000100f440bde4c0001.validateJsonObject(jsonObj.getAsJsonObject("businessProcessParameters"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("descriptor") != null && !jsonObj.get("descriptor").isJsonNull()) && !jsonObj.get("descriptor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `descriptor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("descriptor").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf>() {
           @Override
           public void write(JsonWriter out, GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf
  * @throws IOException if the JSON string is invalid with respect to GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf
  */
  public static GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf.class);
  }

 /**
  * Convert an instance of GiveRequestedFeedbackDetailsD396fd5bffec10000e3eba1a70440000AllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

