/*
 * performanceEnablement
 * The Performance Management service enables applications to access and create feedback about workers in the system.
 *
 * The version of the OpenAPI document: v5
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.BadgeAfd6ac52d62510001357f891ccfd0003;
import com.konfigthis.client.model.BusinessProcessParameters2b4c8a6ca069100035b85907ae2c0000;
import com.konfigthis.client.model.BusinessProcessParameters4db9c44d36231000134c7a5b6f3b0000;
import com.konfigthis.client.model.BusinessProcessParametersAfd6ac52d6251000117d0a60ed8b0000;
import com.konfigthis.client.model.ERRORMODELREFERENCE;
import com.konfigthis.client.model.FeedbackAbout2b4c8a6ca069100035b85907ae2c0002;
import com.konfigthis.client.model.FeedbackAbout4db9c44d36231000134c7b8eb3800003;
import com.konfigthis.client.model.FeedbackEventDetailAfd6ac52d62510001086b5c85cd50000;
import com.konfigthis.client.model.FeedbackRespondersFfdd5de32f7f100016dbb1b188d70000;
import com.konfigthis.client.model.FeedbackTemplate2b4c8a6ca069100035b859a141200001;
import com.konfigthis.client.model.FeedbackTemplate4db9c44d36231000134c7b8eb3800000;
import com.konfigthis.client.model.FromWorkerAfd6ac52d62510001357f891ccfd0001;
import com.konfigthis.client.model.GetWorkersFeedbackAlsoAbout3ab333661034100010b5635b2f7a0302;
import com.konfigthis.client.model.GoalsSummary2c793e888bcd100033e663075a2b0000;
import java.time.LocalDate;
import com.konfigthis.client.model.RelatedFeedbackEvents9708c966f04f10000e1e9b7f9a5c0000;
import com.konfigthis.client.model.RelatesTo9d12ad407f0f10001c3949add7d40000;
import com.konfigthis.client.model.RequestedFeedbackOnSelfEventDetail19acce0101b310002e6bf03e1bbc0000;
import com.konfigthis.client.model.RequestedFeedbackOnWorkerEventDetail2b4c8a6ca069100035b8586e16c20000;
import com.konfigthis.client.model.RequestedFeedbackQuestionFfdd5de32f7f1000144df0c21e640000;
import com.konfigthis.client.model.ToWorkerF4946919a39f10000f03207b1f230000;
import com.konfigthis.client.model.WorkerDataC2466b0778c610000d1936006720000e;
import com.konfigthis.client.model.WorkersGetCollectionStaffingResponse;
import com.konfigthis.client.model.WorkersGetFeedbackEventsResponse;
import com.konfigthis.client.model.WorkersGetGoalsResponse;
import com.konfigthis.client.model.WorkersGetRequestedFeedbackEventsResponse;
import com.konfigthis.client.model.WorkersGetSelfRequestedFeedbackResponse;
import com.konfigthis.client.model.WorkersToNotify9e478586f65410001035b6c26a4c0000;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkersApi
 */
@Disabled
public class WorkersApiTest {

    private static WorkersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new WorkersApi(apiClient);
    }

    /**
     * Creates a single feedback given event instance about the specified worker.
     *
     * Creates a single instance of feedback for each of the specified workers with the provided data. The worker is specified by the Workday ID of the worker. You can use a returned id from GET /workers in the Staffing service /staffing.  If you want to see the status of conditionally hidden attributes for this request, call this method with the wd-metadata-api-version header. Set the header value to v1 (or the latest Workday Metadata API version). When you specify the wd-metadata-api-version header, this method returns the response metadata, instead of the actual data.  This endpoint is equivalent to the Give Feedback task in Workday. This endpoint initiates the Give Feedback business process or the Give Feedback to Multiple Recipients business process based on the request.  Secured by: Give Feedback  Scope: Performance Enablement, Worker Profile and Skills
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFeedbackEventTest() throws ApiException {
        String ID = null;
        ToWorkerF4946919a39f10000f03207b1f230000 toWorker = null;
        List<WorkersToNotify9e478586f65410001035b6c26a4c0000> workersToNotify = null;
        RelatesTo9d12ad407f0f10001c3949add7d40000 relatesTo = null;
        BusinessProcessParametersAfd6ac52d6251000117d0a60ed8b0000 businessProcessParameters = null;
        List<GetWorkersFeedbackAlsoAbout3ab333661034100010b5635b2f7a0302> feedbackAlsoAbout = null;
        Boolean hiddenFromWorker = null;
        Boolean hiddenFromManager = null;
        String comment = null;
        FromWorkerAfd6ac52d62510001357f891ccfd0001 fromWorker = null;
        BadgeAfd6ac52d62510001357f891ccfd0003 badge = null;
        List<RelatedFeedbackEvents9708c966f04f10000e1e9b7f9a5c0000> relatedFeedbackEvents = null;
        LocalDate feedbackGivenDate = null;
        Boolean showFeedbackProviderName = null;
        String href = null;
        String id = null;
        String descriptor = null;
        FeedbackEventDetailAfd6ac52d62510001086b5c85cd50000 response = api.createFeedbackEvent(ID)
                .toWorker(toWorker)
                .workersToNotify(workersToNotify)
                .relatesTo(relatesTo)
                .businessProcessParameters(businessProcessParameters)
                .feedbackAlsoAbout(feedbackAlsoAbout)
                .hiddenFromWorker(hiddenFromWorker)
                .hiddenFromManager(hiddenFromManager)
                .comment(comment)
                .fromWorker(fromWorker)
                .badge(badge)
                .relatedFeedbackEvents(relatedFeedbackEvents)
                .feedbackGivenDate(feedbackGivenDate)
                .showFeedbackProviderName(showFeedbackProviderName)
                .href(href)
                .id(id)
                .descriptor(descriptor)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a collection of workers and current staffing information.
     *
     * Retrieves a collection of workers and current staffing information.  Secured by: Self-Service: Current Staffing Information, Worker Data: Public Worker Reports  Scope: Staffing
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCollectionStaffingTest() throws ApiException {
        Boolean includeTerminatedWorkers = null;
        Long limit = null;
        Long offset = null;
        String search = null;
        WorkersGetCollectionStaffingResponse response = api.getCollectionStaffing()
                .includeTerminatedWorkers(includeTerminatedWorkers)
                .limit(limit)
                .offset(offset)
                .search(search)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a feedback given event instance with the specified ID.
     *
     * Retrieves a single feedback given event instance with the specified ID.  This endpoint is equivalent to the View Feedback task in Workday.  Secured by: Self-Service: Anytime Feedback, Worker Data: Anytime Feedback  Scope: Performance Enablement, Worker Profile and Skills
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFeedbackEventTest() throws ApiException {
        String ID = null;
        String subresourceID = null;
        FeedbackEventDetailAfd6ac52d62510001086b5c85cd50000 response = api.getFeedbackEvent(ID, subresourceID)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a collection of feedback given events about the specified worker.
     *
     * Retrieves all feedback given events about the specified worker. Could also return a feedback multiple recipient event.  This endpoint is equivalent to the View Feedback task in Workday.  Secured by: Self-Service: Anytime Feedback, Worker Data: Anytime Feedback  Scope: Performance Enablement, Worker Profile and Skills
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFeedbackEventsTest() throws ApiException {
        String ID = null;
        Long limit = null;
        Long offset = null;
        WorkersGetFeedbackEventsResponse response = api.getFeedbackEvents(ID)
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a collection of goals for a specific worker.
     *
     * Retrieves all goals for a worker with the specified ID. You can use a returned id from GET /workers in the Staffing service. The goal data includes name, description, category, tags, associated reviews, due date, completed date, status, creator, worker it is for, supporting organization goal, locked reason, and activity streamable item.  Secured by: Self-Service: Employee Goals, Worker Data: Employee Goals  Scope: Performance Enablement
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGoalsTest() throws ApiException {
        String ID = null;
        Long limit = null;
        Long offset = null;
        WorkersGetGoalsResponse response = api.getGoals(ID)
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a single requested feedback event instance for the specified worker.
     *
     * Retrieves a single requested feedback event instance for the specified worker. This endpoint is equivalent to the View Feedback and View Feedback by Request tasks in Workday.  Secured by: Self-Service: Role Requested Feedback, Worker Data: Role Requested Feedback  Scope: Performance Enablement, Worker Profile and Skills
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRequestedEventTest() throws ApiException {
        String ID = null;
        String subresourceID = null;
        RequestedFeedbackOnWorkerEventDetail2b4c8a6ca069100035b8586e16c20000 response = api.getRequestedEvent(ID, subresourceID)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a collection of requested feedback events for the specified worker.
     *
     * Retrieves all requested feedback events for the specified worker. This endpoint is equivalent to the View Feedback task in Workday.  Secured by: Self-Service: Role Requested Feedback, Worker Data: Role Requested Feedback  Scope: Performance Enablement, Worker Profile and Skills
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRequestedFeedbackEventsTest() throws ApiException {
        String ID = null;
        Long limit = null;
        Long offset = null;
        WorkersGetRequestedFeedbackEventsResponse response = api.getRequestedFeedbackEvents(ID)
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a collection of self-requested feedback events for the specified worker.
     *
     * Retrieves all self-requested feedback events for the specified worker. This endpoint is equivalent to the View Feedback task in Workday.  Secured by: Self-Service: Self Requested Feedback, Worker Data: Self Requested Feedback  Scope: Performance Enablement, Worker Profile and Skills
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfRequestedFeedbackTest() throws ApiException {
        String ID = null;
        Long limit = null;
        Long offset = null;
        WorkersGetSelfRequestedFeedbackResponse response = api.getSelfRequestedFeedback(ID)
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a single self-requested feedback event instance for the specified worker.
     *
     * Retrieves a single self-requested feedback event instance for the specified worker. This endpoint is equivalent to the View Feedback and View Feedback by Request tasks in Workday.  Secured by: Self-Service: Self Requested Feedback, Worker Data: Self Requested Feedback  Scope: Performance Enablement, Worker Profile and Skills
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfRequestedFeedbackEventTest() throws ApiException {
        String ID = null;
        String subresourceID = null;
        RequestedFeedbackOnSelfEventDetail19acce0101b310002e6bf03e1bbc0000 response = api.getSelfRequestedFeedbackEvent(ID, subresourceID)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a single goal instance for a specific worker.
     *
     * Retrieves a single goal instance for a worker with the specified ID. The goal data includes name, description, category, tags, associated reviews, due date, completed date, status, creator, worker it is for, supporting organization goal, locked reason, and activity streamable item.  Secured by: Self-Service: Employee Goals, Worker Data: Employee Goals  Scope: Performance Enablement
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleGoalTest() throws ApiException {
        String ID = null;
        String subresourceID = null;
        GoalsSummary2c793e888bcd100033e663075a2b0000 response = api.getSingleGoal(ID, subresourceID)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a collection of workers and current staffing information.
     *
     * Retrieves a collection of workers and current staffing information.  Secured by: Self-Service: Current Staffing Information, Worker Data: Public Worker Reports  Scope: Staffing
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStaffingInformationTest() throws ApiException {
        String ID = null;
        WorkerDataC2466b0778c610000d1936006720000e response = api.getStaffingInformation(ID)
                .execute();
        // TODO: test validations
    }

    /**
     * Secured by: Get Feedback on Self REST+TG  Scope: Performance Enablement, Worker Profile and Skills
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestFeedbackOnSelfEventsTest() throws ApiException {
        String ID = null;
        BusinessProcessParameters4db9c44d36231000134c7a5b6f3b0000 businessProcessParameters = null;
        List<RequestedFeedbackQuestionFfdd5de32f7f1000144df0c21e640000> feedbackQuestions = null;
        FeedbackAbout4db9c44d36231000134c7b8eb3800003 feedbackAbout = null;
        FeedbackTemplate4db9c44d36231000134c7b8eb3800000 feedbackTemplate = null;
        LocalDate expirationDate = null;
        LocalDate requestDate = null;
        String feedbackOverallStatus = null;
        Boolean feedbackPrivate = null;
        List<FeedbackRespondersFfdd5de32f7f100016dbb1b188d70000> feedbackResponders = null;
        Boolean showFeedbackProviderName = null;
        String descriptor = null;
        String id = null;
        RequestedFeedbackOnSelfEventDetail19acce0101b310002e6bf03e1bbc0000 response = api.requestFeedbackOnSelfEvents(ID)
                .businessProcessParameters(businessProcessParameters)
                .feedbackQuestions(feedbackQuestions)
                .feedbackAbout(feedbackAbout)
                .feedbackTemplate(feedbackTemplate)
                .expirationDate(expirationDate)
                .requestDate(requestDate)
                .feedbackOverallStatus(feedbackOverallStatus)
                .feedbackPrivate(feedbackPrivate)
                .feedbackResponders(feedbackResponders)
                .showFeedbackProviderName(showFeedbackProviderName)
                .descriptor(descriptor)
                .id(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Not applicable.
     *
     * Not applicable.  Secured by: Get Feedback on \\~Worker\\~ REST+TG  Scope: Performance Enablement, Worker Profile and Skills
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestFeedbackOnWorkerEventsTest() throws ApiException {
        String ID = null;
        FeedbackAbout2b4c8a6ca069100035b85907ae2c0002 feedbackAbout = null;
        Boolean feedbackConfidential = null;
        String feedbackOverallStatus = null;
        Boolean showFeedbackProviderName = null;
        LocalDate requestDate = null;
        LocalDate expirationDate = null;
        List<RequestedFeedbackQuestionFfdd5de32f7f1000144df0c21e640000> feedbackQuestions = null;
        FeedbackTemplate2b4c8a6ca069100035b859a141200001 feedbackTemplate = null;
        List<FeedbackRespondersFfdd5de32f7f100016dbb1b188d70000> feedbackResponders = null;
        BusinessProcessParameters2b4c8a6ca069100035b85907ae2c0000 businessProcessParameters = null;
        String descriptor = null;
        String id = null;
        RequestedFeedbackOnWorkerEventDetail2b4c8a6ca069100035b8586e16c20000 response = api.requestFeedbackOnWorkerEvents(ID)
                .feedbackAbout(feedbackAbout)
                .feedbackConfidential(feedbackConfidential)
                .feedbackOverallStatus(feedbackOverallStatus)
                .showFeedbackProviderName(showFeedbackProviderName)
                .requestDate(requestDate)
                .expirationDate(expirationDate)
                .feedbackQuestions(feedbackQuestions)
                .feedbackTemplate(feedbackTemplate)
                .feedbackResponders(feedbackResponders)
                .businessProcessParameters(businessProcessParameters)
                .descriptor(descriptor)
                .id(id)
                .execute();
        // TODO: test validations
    }

}
